{"version":3,"sources":["components/AddCategories.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE/B,EAAoCC,mBAAU,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBI,OAEI,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAOd,SACI,uBACAO,KAAM,OACNC,MAAOT,EACPU,SArBQ,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,a,+BCNbG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEkCC,UAAUH,GAF5C,+DAIDI,MAAMF,GAJL,cAIdG,EAJc,gBAKCA,EAAKC,OALN,uBAKbC,EALa,EAKbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAXrB,kBAebM,GAfa,4CAAH,sDCARO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECFwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KA6BA,OAtBAC,qBAAU,WAENxB,EAASC,GACRwB,MAAK,SAAAC,GACFC,YAAW,WACPC,QAAQC,IAAIH,GAEZH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEd,WAMR,CAACpB,IAKIqB,ED7BsBQ,CAAc7B,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAOnB,OACI,qCACC,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAEnDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SACI,6BAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACP,cAAC,EAAD,eAEIA,GADEA,EAAIC,eErBzBmB,EAAe,WAEvB,MAAiC5C,mBAAS,CAAC,cAA3C,mBAAO6C,EAAP,KAAkB9C,EAAlB,KAKD,OACI,gCACI,8CACA,cAAC,EAAD,CAAeA,cAAeA,IAC9B,uBAGA,6BAEQ8C,EAAWtB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MChB7BgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1f5aa22a.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategories = ({setCategories}) => {\r\n\r\nconst [inputValue, setinputValue] = useState ('')\r\n\r\nconst handelChage = (e)=>{\r\n    setinputValue(e.target.value)\r\n}\r\n\r\nconst handleSubmit = (e)=>{\r\n    e.preventDefault()\r\n\r\n    if(inputValue.trim().length > 2){\r\n        \r\n        setCategories (cats => [inputValue,...cats])\r\n        setinputValue('')\r\n\r\n    }\r\n   \r\n}\r\n    return (\r\n      \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type= 'text'\r\n            value={inputValue}\r\n            onChange={handelChage}\r\n        />\r\n        </form>\r\n        \r\n    )\r\n\r\n    \r\n}\r\nAddCategories.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n export const getGifs = async (category)=> {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=8jgDL5yUDPXfmU01BTnW6y1JGqKeLQkk`\r\n\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images,loading}= useFetchGifs( category )\r\n\r\n\r\n    \r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n         <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n        {loading && <p className='animate__animated animate__flash'>loading...</p>}\r\n\r\n        <div className='card-grid'>\r\n            <ol>\r\n                {\r\n                    images.map( img => (\r\n                            <GifGridItem\r\n                            key= {img.id}\r\n                            {...img} \r\n\r\n                            />                    \r\n                            ))\r\n                    }\r\n            </ol>\r\n        </div>   \r\n        </>\r\n        \r\n    )\r\n}\r\n","\r\n\r\nimport{useEffect, useState} from 'react'\r\nimport { getGifs } from '../components/helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs( category )\r\n        .then(imgs =>{\r\n            setTimeout(()=>{\r\n                console.log(imgs)\r\n\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            },1500)\r\n           \r\n            \r\n        })\r\n    \r\n\r\n    },[category])\r\n    \r\n\r\n    \r\n\r\n    return state\r\n   \r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategories } from './components/AddCategories'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n     const [categories,setCategories]=useState(['One Punch'])\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategories setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category}/>                   ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}